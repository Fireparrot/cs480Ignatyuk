PROJECT(cgs)
CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

SET(CMAKE_MODULE_PATH ${CMAKE_MODULE_PATH} "${PROJECT_SOURCE_DIR}/CMakeModules")
FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(SDL2 REQUIRED)
FIND_PACKAGE(GLEW REQUIRED)
FIND_PACKAGE(GLM REQUIRED)
FIND_PACKAGE(assimp REQUIRED)
FIND_PACKAGE(devIL REQUIRED)
#FIND_PACKAGE(devILU REQUIRED)
#FIND_PACKAGE(devILUT REQUIRED)
FIND_PACKAGE(freetype REQUIRED)
#FIND_PACKAGE(ftgl REQUIRED)
FIND_PACKAGE(BtC REQUIRED)
FIND_PACKAGE(BtD REQUIRED)
FIND_PACKAGE(BtM REQUIRED)
SET(CXX11_FLAGS -std=gnu++11)
SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${CXX11_FLAGS}")
SET(TARGET_LIBRARIES "
    ${OPENGL_LIBRARY}
    ${SDL2_LIBRARY}
    ${ASSIMP_LIBRARIES}
    ${devIL_LIBRARY}
#    ${devILU_LIBRARY}
#    ${devILUT_LIBRARY}
    ${freetype_LIBRARY}
#    ${ftgl_LIBRARY}
    ${BtC_LIBRARY}
    ${BtD_LIBRARY}
    ${BtM_LIBRARY}
")

IF(UNIX)
  ADD_DEFINITIONS(-DUNIX)
ENDIF(UNIX)

IF(NOT APPLE)
    IF(GLEW_FOUND)
        INCLUDE_DIRECTORIES(${GLEW_INCLUDE_DIRS})
        LINK_LIBRARIES(${GLEW_LIBRARIES})
    ENDIF(GLEW_FOUND)
    IF(assimp_FOUND)
        INCLUDE_DIRECTORIES(${assimp_INCLUDE_DIRS})
        LINK_LIBRARIES(${assimp_LIBRARIES})
    ENDIF(assimp_FOUND)
    IF(devIL_FOUND)
        INCLUDE_DIRECTORIES(${devIL_INCLUDE_DIRS})
        LINK_LIBRARIES(${devIL_LIBARY})
    ENDIF(devIL_FOUND)
#    IF(devILU_FOUND)
#        INCLUDE_DIRECTORIES(${devILU_INCLUDE_DIRS})
#        LINK_LIBRARIES(${devILU_LIBARY})
#    ENDIF(devILU_FOUND)
#    IF(devILUT_FOUND)
#        INCLUDE_DIRECTORIES(${devILUT_INCLUDE_DIRS})
#        LINK_LIBRARIES(${devILUT_LIBARY})
#    ENDIF(devILUT_FOUND)
    IF(freetype_FOUND)
        INCLUDE_DIRECTORIES(${freetype_INCLUDE_DIRS})
        LINK_LIBRARIES(${freetype_LIBARY})
    ENDIF(freetype_FOUND)
#    IF(ftgl_FOUND)
#        INCLUDE_DIRECTORIES(${ftgl_INCLUDE_DIRS})
#        LINK_LIBRARIES(${ftgl_LIBARY})
#    ENDIF(ftgl_FOUND)
    IF(BtC_FOUND)
        INCLUDE_DIRECTORIES(${BtC_INCLUDE_DIRS})
        LINK_LIBRARIES(${BtC_LIBARY})
    ENDIF(BtC_FOUND)
    IF(BtD_FOUND)
        INCLUDE_DIRECTORIES(${BtD_INCLUDE_DIRS})
        LINK_LIBRARIES(${BtD_LIBARY})
    ENDIF(BtD_FOUND)
    IF(BtM_FOUND)
        LINK_LIBRARIES(${BtM_LIBARY})
    ENDIF(BtM_FOUND)
ENDIF(NOT APPLE)

INCLUDE_DIRECTORIES(
    "${PROJECT_SOURCE_DIR}/include"
    ${SDL2_INCLUDE_DIR}
    ${GLM_INCLUDE_DIRS}
    ${assimp_INCLUDE_DIRS}
    ${devIL_INCLUDE_DIRS}
#    ${devILU_INCLUDE_DIRS}
#    ${devILUT_INCLUDE_DIRS}
    ${freetype_INCLUDE_DIRS}
#    ${ftgl_INCLUDE_DIRS}
    ${BtC_INCLUD_DIRS}
    ${BtD_INCLUD_DIRS}
)


# Set Includes
SET(INCLUDES ${PROJECT_SOURCE_DIR}/include)
INCLUDE_DIRECTORIES(${INCLUDES})

# Set sources
FILE(GLOB_RECURSE SOURCES "src/*.cpp")
ADD_EXECUTABLE(${PROJECT_NAME} ${SOURCES})

add_custom_target("${PROJECT_NAME}_SUCCESSFUL" ALL
                  DEPENDS ${PROJECT_NAME}
                  COMMAND ${CMAKE_COMMAND} -E copy_directory ${PROJECT_SOURCE_DIR}/shaders/ ${CMAKE_CURRENT_BINARY_DIR}/shaders
                  COMMAND ${CMAKE_COMMAND} -E copy_directory ${PROJECT_SOURCE_DIR}/objects/ ${CMAKE_CURRENT_BINARY_DIR}/objects
                  COMMAND ${CMAKE_COMMAND} -E echo ""
                  COMMAND ${CMAKE_COMMAND} -E echo "====================="
                  COMMAND ${CMAKE_COMMAND} -E echo "  Compile complete!"
                  COMMAND ${CMAKE_COMMAND} -E echo "====================="
                  COMMAND ${CMAKE_COMMAND} -E echo "${CMAKE_CURRENT_BINARY_DIR}"
)

TARGET_LINK_LIBRARIES(
    ${PROJECT_NAME}
    ${OPENGL_LIBRARY}
    ${SDL2_LIBRARY}
    ${ASSIMP_LIBRARY}
    ${devIL_LIBRARY}
#    ${devILU_LIBRARY}
#    ${devILUT_LIBRARY}
    ${freetype_LIBRARY}
#    ${ftgl_LIBRARY}
    ${BtC_LIBRARY}
    ${BtD_LIBRARY}
    ${BtM_LIBRARY}
)

